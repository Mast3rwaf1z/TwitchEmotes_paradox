name: Build Zips for TOC Variants

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - suffix: classic
            interface: 40401
            game_version: 12975
          - suffix: retail
            interface: 110200
            game_version: 13203

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set version (short commit hash)
        id: vars
        run: echo "version=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Generate TOC File
        run: |
          mkdir -p build/TwitchEmotes_paradox
          bash generateToc.sh ${{ matrix.config.interface }} ${{ steps.vars.outputs.version }}

      - name: Copy files and generate zip
        run: |
          rsync -a --exclude='out' --exclude='.git' ./ build/TwitchEmotes_paradox

          mkdir -p out
          ZIP_NAME="TwitchEmotes_paradox-${{ matrix.config.suffix }}-${{ steps.vars.outputs.version }}.zip"
          ZIP_PATH="out/$ZIP_NAME"

          cd build
          zip -r "../$ZIP_PATH" TwitchEmotes_paradox
          cd ..
          rm -rf build
          
          echo "zip_path=$ZIP_PATH" >> $GITHUB_ENV
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.zip_name }}
          path: ${{ env.zip_path }}

      - name: Upload zips to CurseForge
        if: github.ref == 'refs/heads/master'
        env:
          API_TOKEN: ${{ secrets.CURSEFORGE_API_TOKEN }}
        run: |
          PROJECT_ID=1313724
          curl -X POST "https://wow.curseforge.com/api/projects/${PROJECT_ID}/upload-file" \
            -H "x-api-token: ${API_TOKEN}" \
            -F "file=@${{ env.zip_path }}" \
            -F "metadata={
              \"displayName\": \"${{ env.zip_name }}\",
              \"gameVersions\": [${{ matrix.config.game_version }}],
              \"releaseType\": \"beta\",
              \"changelog\": \"Automated beta build ${{ steps.vars.outputs.version }}\",
              \"changelogType\": \"markdown\"
            }"
